import sqlite3
from tkinter import *

#Create root window.
root = Tk()
root.title('TBC 2.4.3 Shadow Priest Gear Evaluation & Upgrades')
#root.geometry('{}x{}'.format(600,500))

#Create and place frames in the root window.
firstFrame = Frame(root, height=250, width=300)
secondFrame = Frame(root, height=250, width=300)
firstFrame.grid(row=0, sticky=W)
secondFrame.grid(row=0, column=1, sticky=E)

#Establish DB connection.
conn = sqlite3.connect('2.4.3 Shadow Priest')
c = conn.cursor()

#Fetch items from the gear tables and create variables to store the data.
c.execute('SELECT itemName FROM helm')
helmChoices = c.fetchall()
c.execute('SELECT itemName FROM necklace')
necklaceChoices = c.fetchall()
c.execute('SELECT itemName FROM shoulders')
shoulderChoices = c.fetchall()

#Create empty lists to clean up the raw data from the gear tables.
helmList = []
necklaceList = []
shoulderList = []

#Function to convert the data from gear tables into usable strings.
def createStrings(list, finalList):

    for item in list:
        item = str(item)
        item = item[2:-3]
        finalList.append(item)

    return finalList

#Call the function to create the strings.
createStrings(helmChoices, helmList)
createStrings(necklaceChoices, necklaceList)
createStrings(shoulderChoices, shoulderList)

print(helmChoices)
print(necklaceChoices)
print(shoulderChoices)

#Create Tk variables to use with drop-down menus for gear selection.
helmVar = StringVar()
necklaceVar = StringVar()
shoulderVar = StringVar()

#Set the default choice in the drop-downs as well as initializing the select variables.
totalGearSelection = []
helmVar.set(helmList[0])
helmSelect = helmList[0]
necklaceVar.set(necklaceList[0])
necklaceSelect = necklaceList[0]
shoulderVar.set(shoulderList[0])
shoulderSelect = shoulderList[0]

#Variable string initialization for display in secondFrame.
totalIntellect = StringVar()
totalStamina = StringVar()
totalSpirit = StringVar()
totalSpellHit = StringVar()
totalSpellCrit = StringVar()
totalSpellHaste = StringVar()
totalManaPerFive = StringVar()
totalSpellDamage = StringVar()
totalSockets = StringVar()
totalMetaSocket = StringVar()

#Create the drop-down menu and labels in firstFrame.
helmChoiceLabel = Label(firstFrame, text='Choose your helm: ')
helmPopupMenu = OptionMenu(firstFrame, helmVar, *helmList)
necklaceChoiceLabel = Label(firstFrame, text='Choose your necklace: ')
necklacePopupMenu = OptionMenu(firstFrame, necklaceVar, *necklaceList)
shoulderChoiceLabel = Label(firstFrame, text='Choose your shoulders: ')
shoulderPopupMenu = OptionMenu(firstFrame, shoulderVar, *shoulderList)

#Create labels in secondFrame.
totalStatsLabel = Label(secondFrame, text='Total Stats of Selected Gear')
totalIntTextLabel = Label(secondFrame, text='Intellect: ')
totalStamTextLabel = Label(secondFrame, text='Stamina: ')
totalSpiritTextLabel = Label(secondFrame, text='Spirit: ')
totalSpellHitTextLabel = Label(secondFrame, text='Spell Hit: ')
totalSpellCritTextLabel = Label(secondFrame, text='Spell Crit: ')
totalSpellHasteTextLabel = Label(secondFrame, text='Spell Haste: ')
totalManaPerFiveTextLabel = Label(secondFrame, text='Mp5: ')
totalSpellDamageTextLabel = Label(secondFrame, text='Spell Damage: ')
totalSocketsTextLabel = Label(secondFrame, text='Sockets: ')
totalMetaSocketTextLabel = Label(secondFrame, text='Meta Socket (T/F): ')
totalIntLabel = Label(secondFrame, textvariable=totalIntellect)
totalStamLabel = Label(secondFrame, textvariable=totalStamina)
totalSpiritLabel = Label(secondFrame, textvariable=totalSpirit)
totalSpellHitLabel = Label(secondFrame, textvariable=totalSpellHit)
totalSpellCritLabel = Label(secondFrame, textvariable=totalSpellCrit)
totalSpellHasteLabel = Label(secondFrame, textvariable=totalSpellHaste)
totalManaPerFiveLabel = Label(secondFrame, textvariable=totalManaPerFive)
totalSpellDamageLabel = Label(secondFrame, textvariable=totalSpellDamage)
totalSocketsLabel = Label(secondFrame, textvariable=totalSockets)
totalMetaSocketLabel = Label(secondFrame, textvariable=totalMetaSocket)

#Place the drop-down menu and labels in firstFrame.
helmChoiceLabel.grid(row=0)
helmPopupMenu.grid(row=0, column=1)
necklaceChoiceLabel.grid(row=1)
necklacePopupMenu.grid(row=1, column=1)
shoulderChoiceLabel.grid(row=2)
shoulderPopupMenu.grid(row=2, column=1)

#Place the labels in secondFrame.
totalStatsLabel.grid(row=0, columnspan=2)
totalIntTextLabel.grid(row=1)
totalStamTextLabel.grid(row=2)
totalSpiritTextLabel.grid(row=3)
totalSpellHitTextLabel.grid(row=4)
totalSpellCritTextLabel.grid(row=5)
totalSpellHasteTextLabel.grid(row=6)
totalManaPerFiveTextLabel.grid(row=7)
totalSpellDamageTextLabel.grid(row=8)
totalSocketsTextLabel.grid(row=9)
totalMetaSocketTextLabel.grid(row=10)
totalIntLabel.grid(row=1, column=1)
totalStamLabel.grid(row=2, column=1)
totalSpiritLabel.grid(row=3, column=1)
totalSpellHitLabel.grid(row=4, column=1)
totalSpellCritLabel.grid(row=5, column=1)
totalSpellHasteLabel.grid(row=6, column=1)
totalManaPerFiveLabel.grid(row=7, column=1)
totalSpellDamageLabel.grid(row=8, column=1)
totalSocketsLabel.grid(row=9, column=1)
totalMetaSocketLabel.grid(row=10, column=1)

#Function to handle button click and display the selection as a label. Also initializes variable for DB update and calls DB commit function.
def confirmSelection(select):

    counter = 0

    for item in select:

        if counter == 0:
            table = 'helm'
        elif counter == 1:
            table = 'necklace'
        elif counter == 2:
            table = 'shoulders'

        selectionString = 'SELECT * FROM ' + table + ' WHERE itemName=\"' + item + '\"'
        c.execute(selectionString)
        selection = []
        selection = c.fetchall()
        c.execute(selectionString)
        select = c.fetchall()
        #print(selection)
        selection = selection[0]
        print(selection)

        updateDbTuple = (selection[0], selection[1], selection[3], selection[4], selection[5], selection[6], selection[8], selection[10], selection[12], selection[11], selection[9], selection[13])
        commitSelectionToDb(updateDbTuple)

        counter += 1

    createTotalStats()
    totalStatsForDisplay()

#Function to commit the player's choice to the DB.
def commitSelectionToDb(itemTuple):

    sql_update_query = 'UPDATE playerGear SET itemName=?, intellect=?, spirit=?, spellHit=?, spellCrit=?, spellHaste=?, spellDamage=?, sockets=?, socketBonus=?, metaSocket=?, dropsFrom=? WHERE itemType=?'
    c.execute(sql_update_query, itemTuple)
    conn.commit()

#Function to pull stats from playerGear table and insert the totals in playerTotalStats table.
def createTotalStats():

    totalIntellect = 0
    totalStamina = 0
    totalSpirit = 0
    totalSpellHit = 0
    totalSpellCrit = 0
    totalSpellHaste = 0
    totalManaPerFive = 0
    totalSpellDamage = 0
    totalSockets = 0
    totalMetaSocket = 'False'

    c.execute('SELECT * FROM playerGear')
    playerGear = c.fetchall()

    for item in playerGear:
        totalIntellect += item[2]
        totalStamina += item[3]
        totalSpirit += item[4]
        totalSpellHit += item[5]
        totalSpellCrit += item[6]
        totalSpellHaste += item[7]
        totalManaPerFive += item[8]
        totalSpellDamage += item[9]
        totalSockets += item[11]

        if item[0] == 'helm':
            totalMetaSocket = item[12]
        else:
            continue

    sql_update_query = 'UPDATE playerTotalStats SET intellect=?, stamina=?, spirit=?, spellHit=?, spellCrit=?, spellHaste=?, manaPerFive=?, spellDamage=?, sockets=?, metaSocket=? WHERE id=0'
    data_to_update = (totalIntellect, totalStamina, totalSpirit, totalSpellHit, totalSpellCrit, totalSpellHaste, totalManaPerFive, totalSpellDamage, totalSockets, totalMetaSocket)
    c.execute(sql_update_query, data_to_update)
    conn.commit()

#Function to pull data from playerTotalStats table and display it within the window.
def totalStatsForDisplay():
    global totalIntellect, totalStamina, totalSpirit, totalSpellHit, totalSpellCrit, totalSpellHaste, totalManaPerFive, totalSpellDamage, totalSockets, totalMetaSocket

    c.execute('SELECT * FROM playerTotalStats')
    playerTotalStats = c.fetchall()
    playerTotalStats = playerTotalStats[0]

    totalIntellect.set(playerTotalStats[0])
    totalStamina.set(playerTotalStats[9])
    totalSpirit.set(playerTotalStats[1])
    totalSpellHit.set(playerTotalStats[2])
    totalSpellCrit.set(playerTotalStats[3])
    totalSpellHaste.set(playerTotalStats[4])
    totalManaPerFive.set(playerTotalStats[10])
    totalSpellDamage.set(playerTotalStats[5])
    totalSockets.set(playerTotalStats[6])
    totalMetaSocket.set(playerTotalStats[7])



#Create button for player to confirm their gear selection.
selectionButton = Button(firstFrame, text='Confirm Selection', command=lambda: confirmSelection(totalGearSelection))
selectionButton.grid(row=3, columnspan=2)

#Function to handle changing the drop-down choice and get the new selection.
def change_dropdown(*args):
    global totalGearSelection, helmSelect, necklaceSelect, shoulderSelect

    totalGearSelection = []

    helmSelect = str(helmVar.get())
    necklaceSelect = str(necklaceVar.get())
    shoulderSelect = str(shoulderVar.get())

    totalGearSelection.append(helmSelect)
    totalGearSelection.append(necklaceSelect)
    totalGearSelection.append(shoulderSelect)

#No idea what this does... :')
helmVar.trace('w', change_dropdown)
necklaceVar.trace('w', change_dropdown)
shoulderVar.trace('w', change_dropdown)

#Mainloop to keep the window running until closed.
root.mainloop()















